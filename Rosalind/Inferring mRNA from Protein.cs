using System;
using System.IO;
using System.Numerics;

namespace Rosalind
{
	public class Problem11
	{
		public static void InferringRNA()
		{
			string line;
			//Open the file and allow RW
			StreamReader file =
				new StreamReader(File.Open("/Users/ross.blanchard/Downloads/rosalind_mrna.txt", FileMode.Open, FileAccess.ReadWrite));
			string nucs = "";
			//while the file contains lines, parse the one sequence into a string. 

			while ((line = file.ReadLine()) != null)
			{
				if (!line.StartsWith(">"))
				{
					nucs = line;
				}
			}
			file.Dispose();
			//Console.WriteLine(line);
			var chrArray = nucs.ToCharArray();
			int dictValue = 0;
			//biginteger necessary for very large number generated by possibilities
			BigInteger multiplicationResult = 1;
			//uses the number of possibilities for each protein translation and multiplies the multiplicationResult by it
			foreach (var element in chrArray)
			{
				dictValue = TranslationDictionary.TranslationCounts(element);
				multiplicationResult = multiplicationResult * dictValue;
			}
			//returns the number of possible translations times 3 for the number of possible stop codons, mod 1 million
			Console.WriteLine((multiplicationResult * 3) % 1000000);
		}
	}
}
